{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ARTHUR\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\cactus soft\\\\my-app\\\\src\\\\pages\\\\InformacoesGerais.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../css/InformacoesGerais.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InformacoesGerais = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [filteredData, setFilteredData] = useState(null);\n  const [quantOnline, setClienteOnline] = useState(0);\n  const [quantOffline, setClienteOffline] = useState(0);\n  const [clientesPorPlano, setClientesPorPlano] = useState({});\n  const [totalReceita, setTotalReceita] = useState(0);\n  const [consumoTotalDownload, setConsumoTotalDownload] = useState(0);\n  const [consumoTotalUpload, setConsumoTotalUpload] = useState(0);\n  const [mediaTempoConectado, setMediaTempoConectado] = useState(0);\n  const [clientesPorCidade, setClientesPorCidade] = useState({});\n  const [clientesPorConcentrador, setClientesPorConcentrador] = useState({});\n  const [filtroTipoInternet, setFiltroTipoInternet] = useState('');\n  const [filtroCidade, setFiltroCidade] = useState('');\n  const [filtroStatus, setFiltroStatus] = useState('');\n  const infoClientes = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3333/findClienteByName?name=\");\n      setData(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    infoClientes();\n  }, []);\n  useEffect(() => {\n    if (data) {\n      const filtered = data.filter(cliente => {\n        const tipoPlano = cliente.planoContrato.toLowerCase();\n        const isFibra = tipoPlano.includes('fibra');\n        const isBandaLarga = tipoPlano.includes('banda larga');\n        const isOutros = !isFibra && !isBandaLarga;\n        const matchTipoInternet = filtroTipoInternet === '' || filtroTipoInternet === 'fibra' && isFibra || filtroTipoInternet === 'banda larga' && isBandaLarga || filtroTipoInternet === 'outros' && isOutros;\n        const matchCidade = filtroCidade === '' || cliente.cidadeCliente.toLowerCase().includes(filtroCidade.toLowerCase());\n        const matchStatus = filtroStatus === '' || filtroStatus === 'online' && cliente.statusCliente || filtroStatus === 'offline' && !cliente.statusCliente;\n        return matchTipoInternet && matchCidade && matchStatus && matchPrecoMin && matchPrecoMax;\n      });\n      setFilteredData(filtered);\n    }\n  }, [data, filtroTipoInternet, filtroCidade, filtroStatus]);\n  useEffect(() => {\n    if (filteredData) {\n      const quantOnline = filteredData.reduce((count, cliente) => cliente.statusCliente ? count + 1 : count, 0);\n      const quantOffline = filteredData.reduce((count, cliente) => !cliente.statusCliente ? count + 1 : count, 0);\n      setClienteOnline(quantOnline);\n      setClienteOffline(quantOffline);\n      const quantClientesPlanos = filteredData.reduce((acc, cliente) => {\n        const plano = cliente.planoContrato;\n        acc[plano] = (acc[plano] || 0) + 1;\n        return acc;\n      }, {});\n      setClientesPorPlano(quantClientesPlanos);\n      const totalReceita = filteredData.reduce((total, cliente) => total + (cliente.valorPlano || 0), 0);\n      setTotalReceita(totalReceita);\n      const consumoTotalDownload = filteredData.reduce((total, cliente) => total + (Number(cliente.consumoDownload) || 0), 0);\n      setConsumoTotalDownload(consumoTotalDownload / 1024 ** 4); // Convert bytes to TB\n\n      const consumoTotalUpload = filteredData.reduce((total, cliente) => total + (Number(cliente.consumoUpload) || 0), 0);\n      setConsumoTotalUpload(consumoTotalUpload / 1024 ** 4); // Convert bytes to TB\n\n      const totalTempoConectado = filteredData.reduce((total, cliente) => total + (Number(cliente.tempoConectado) || 0), 0);\n      const mediaTempoConectado = filteredData.length ? totalTempoConectado / filteredData.length : 0;\n      setMediaTempoConectado(mediaTempoConectado);\n      const clientesPorCidade = filteredData.reduce((acc, cliente) => {\n        const cidade = cliente.cidadeCliente;\n        acc[cidade] = acc[cidade] || {\n          online: 0,\n          offline: 0\n        };\n        if (cliente.statusCliente) {\n          acc[cidade].online++;\n        } else {\n          acc[cidade].offline++;\n        }\n        return acc;\n      }, {});\n      setClientesPorCidade(clientesPorCidade);\n      const clientesPorConcentrador = filteredData.reduce((acc, cliente) => {\n        const concentrador = cliente.nomeConcentrador;\n        acc[concentrador] = acc[concentrador] || {\n          online: 0,\n          offline: 0\n        };\n        if (cliente.statusCliente) {\n          acc[concentrador].online++;\n        } else {\n          acc[concentrador].offline++;\n        }\n        return acc;\n      }, {});\n      setClientesPorConcentrador(clientesPorConcentrador);\n    }\n  }, [filteredData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Informa\\xE7\\xF5es Gerais\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"filtros\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Tipo de Internet:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filtroTipoInternet,\n          onChange: e => setFiltroTipoInternet(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Todos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"fibra\",\n            children: \"Fibra\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"banda larga\",\n            children: \"Banda Larga\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"outros\",\n            children: \"Outros\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Cidade:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: filtroCidade,\n          onChange: e => setFiltroCidade(e.target.value),\n          placeholder: \"Digite a cidade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Status:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filtroStatus,\n          onChange: e => setFiltroStatus(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Todos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"online\",\n            children: \"Online\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"offline\",\n            children: \"Offline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"informacoesGerais\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"informacoes\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Informa\\xE7\\xF5es\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Clientes Online: \", quantOnline]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Clientes Offline: \", quantOffline]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Receita: R$ \", totalReceita.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Consumo Total Download: \", consumoTotalDownload.toFixed(2), \" TB\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Consumo Total Upload: \", consumoTotalUpload.toFixed(2), \" TB\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"M\\xE9dia de Tempo Conectado: \", mediaTempoConectado.toFixed(2), \" horas\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), Object.keys(clientesPorPlano).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Clientes por Plano:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), Object.keys(clientesPorPlano).map(plano => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [plano, \": \", clientesPorPlano[plano]]\n        }, plano, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), Object.keys(clientesPorCidade).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Clientes por Cidade:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), Object.keys(clientesPorCidade).map(cidade => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [cidade, \": \", clientesPorCidade[cidade].online, \" online, \", clientesPorCidade[cidade].offline, \" offline\"]\n        }, cidade, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), Object.keys(clientesPorConcentrador).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Clientes por Concentrador:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), Object.keys(clientesPorConcentrador).map(concentrador => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [concentrador, \": \", clientesPorConcentrador[concentrador].online, \" online, \", clientesPorConcentrador[concentrador].offline, \" offline\"]\n        }, concentrador, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(InformacoesGerais, \"mIlB9R9x5YQy4KUcXqtQ8XhRSGE=\");\n_c = InformacoesGerais;\nexport default InformacoesGerais;\nvar _c;\n$RefreshReg$(_c, \"InformacoesGerais\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","InformacoesGerais","_s","data","setData","filteredData","setFilteredData","quantOnline","setClienteOnline","quantOffline","setClienteOffline","clientesPorPlano","setClientesPorPlano","totalReceita","setTotalReceita","consumoTotalDownload","setConsumoTotalDownload","consumoTotalUpload","setConsumoTotalUpload","mediaTempoConectado","setMediaTempoConectado","clientesPorCidade","setClientesPorCidade","clientesPorConcentrador","setClientesPorConcentrador","filtroTipoInternet","setFiltroTipoInternet","filtroCidade","setFiltroCidade","filtroStatus","setFiltroStatus","infoClientes","response","get","error","console","log","filtered","filter","cliente","tipoPlano","planoContrato","toLowerCase","isFibra","includes","isBandaLarga","isOutros","matchTipoInternet","matchCidade","cidadeCliente","matchStatus","statusCliente","matchPrecoMin","matchPrecoMax","reduce","count","quantClientesPlanos","acc","plano","total","valorPlano","Number","consumoDownload","consumoUpload","totalTempoConectado","tempoConectado","length","cidade","online","offline","concentrador","nomeConcentrador","children","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","e","target","type","placeholder","toFixed","Object","keys","map","_c","$RefreshReg$"],"sources":["C:/Users/ARTHUR/OneDrive/Área de Trabalho/cactus soft/my-app/src/pages/InformacoesGerais.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../css/InformacoesGerais.css';\r\n\r\nconst InformacoesGerais = () => {\r\n  const [data, setData] = useState(null);\r\n  const [filteredData, setFilteredData] = useState(null);\r\n  const [quantOnline, setClienteOnline] = useState(0);\r\n  const [quantOffline, setClienteOffline] = useState(0);\r\n  const [clientesPorPlano, setClientesPorPlano] = useState({});\r\n  const [totalReceita, setTotalReceita] = useState(0);\r\n  const [consumoTotalDownload, setConsumoTotalDownload] = useState(0);\r\n  const [consumoTotalUpload, setConsumoTotalUpload] = useState(0);\r\n  const [mediaTempoConectado, setMediaTempoConectado] = useState(0);\r\n  const [clientesPorCidade, setClientesPorCidade] = useState({});\r\n  const [clientesPorConcentrador, setClientesPorConcentrador] = useState({});\r\n  const [filtroTipoInternet, setFiltroTipoInternet] = useState('');\r\n  const [filtroCidade, setFiltroCidade] = useState('');\r\n  const [filtroStatus, setFiltroStatus] = useState('');\r\n\r\n  const infoClientes = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:3333/findClienteByName?name=\");\r\n      setData(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    infoClientes();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      const filtered = data.filter(cliente => {\r\n        const tipoPlano = cliente.planoContrato.toLowerCase();\r\n        const isFibra = tipoPlano.includes('fibra');\r\n        const isBandaLarga = tipoPlano.includes('banda larga');\r\n        const isOutros = !isFibra && !isBandaLarga;\r\n\r\n        const matchTipoInternet =\r\n          (filtroTipoInternet === '' || \r\n          (filtroTipoInternet === 'fibra' && isFibra) || \r\n          (filtroTipoInternet === 'banda larga' && isBandaLarga) ||\r\n          (filtroTipoInternet === 'outros' && isOutros));\r\n\r\n        const matchCidade =\r\n          filtroCidade === '' || cliente.cidadeCliente.toLowerCase().includes(filtroCidade.toLowerCase());\r\n\r\n        const matchStatus =\r\n          filtroStatus === '' || (filtroStatus === 'online' && cliente.statusCliente) || (filtroStatus === 'offline' && !cliente.statusCliente);\r\n\r\n        return matchTipoInternet && matchCidade && matchStatus && matchPrecoMin && matchPrecoMax;\r\n      });\r\n      setFilteredData(filtered);\r\n    }\r\n  }, [data, filtroTipoInternet, filtroCidade, filtroStatus\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (filteredData) {\r\n      const quantOnline = filteredData.reduce((count, cliente) => cliente.statusCliente ? count + 1 : count, 0);\r\n      const quantOffline = filteredData.reduce((count, cliente) => !cliente.statusCliente ? count + 1 : count, 0);\r\n      setClienteOnline(quantOnline);\r\n      setClienteOffline(quantOffline);\r\n\r\n      const quantClientesPlanos = filteredData.reduce((acc, cliente) => {\r\n        const plano = cliente.planoContrato;\r\n        acc[plano] = (acc[plano] || 0) + 1;\r\n        return acc;\r\n      }, {});\r\n      setClientesPorPlano(quantClientesPlanos);\r\n\r\n      const totalReceita = filteredData.reduce((total, cliente) => total + (cliente.valorPlano || 0), 0);\r\n      setTotalReceita(totalReceita);\r\n\r\n      const consumoTotalDownload = filteredData.reduce((total, cliente) => total + (Number(cliente.consumoDownload) || 0), 0);\r\n      setConsumoTotalDownload(consumoTotalDownload / (1024 ** 4)); // Convert bytes to TB\r\n\r\n      const consumoTotalUpload = filteredData.reduce((total, cliente) => total + (Number(cliente.consumoUpload) || 0), 0);\r\n      setConsumoTotalUpload(consumoTotalUpload / (1024 ** 4)); // Convert bytes to TB\r\n\r\n      const totalTempoConectado = filteredData.reduce((total, cliente) => total + (Number(cliente.tempoConectado) || 0), 0);\r\n      const mediaTempoConectado = filteredData.length ? totalTempoConectado / filteredData.length : 0;\r\n      setMediaTempoConectado(mediaTempoConectado);\r\n\r\n      const clientesPorCidade = filteredData.reduce((acc, cliente) => {\r\n        const cidade = cliente.cidadeCliente;\r\n        acc[cidade] = acc[cidade] || { online: 0, offline: 0 };\r\n        if (cliente.statusCliente) {\r\n          acc[cidade].online++;\r\n        } else {\r\n          acc[cidade].offline++;\r\n        }\r\n        return acc;\r\n      }, {});\r\n      setClientesPorCidade(clientesPorCidade);\r\n\r\n      const clientesPorConcentrador = filteredData.reduce((acc, cliente) => {\r\n        const concentrador = cliente.nomeConcentrador;\r\n        acc[concentrador] = acc[concentrador] || { online: 0, offline: 0 };\r\n        if (cliente.statusCliente) {\r\n          acc[concentrador].online++;\r\n        } else {\r\n          acc[concentrador].offline++;\r\n        }\r\n        return acc;\r\n      }, {});\r\n      setClientesPorConcentrador(clientesPorConcentrador);\r\n    }\r\n  }, [filteredData]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Informações Gerais</h1>\r\n\r\n      <div id='filtros'>\r\n        <label>\r\n          Tipo de Internet:\r\n          <select value={filtroTipoInternet} onChange={e => setFiltroTipoInternet(e.target.value)}>\r\n            <option value=''>Todos</option>\r\n            <option value='fibra'>Fibra</option>\r\n            <option value='banda larga'>Banda Larga</option>\r\n            <option value='outros'>Outros</option>\r\n          </select>\r\n        </label>\r\n        <label>\r\n          Cidade:\r\n          <input\r\n            type='text'\r\n            value={filtroCidade}\r\n            onChange={e => setFiltroCidade(e.target.value)}\r\n            placeholder='Digite a cidade'\r\n          />\r\n        </label>\r\n        <label>\r\n          Status:\r\n          <select value={filtroStatus} onChange={e => setFiltroStatus(e.target.value)}>\r\n            <option value=''>Todos</option>\r\n            <option value='online'>Online</option>\r\n            <option value='offline'>Offline</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n\r\n      <div id='informacoesGerais'>\r\n        <div id='informacoes'>\r\n          <h2>Informações</h2>\r\n          <p>Clientes Online: {quantOnline}</p>\r\n          <p>Clientes Offline: {quantOffline}</p>\r\n          <p>Total Receita: R$ {totalReceita.toFixed(2)}</p>\r\n          <p>Consumo Total Download: {consumoTotalDownload.toFixed(2)} TB</p>\r\n          <p>Consumo Total Upload: {consumoTotalUpload.toFixed(2)} TB</p>\r\n          <p>Média de Tempo Conectado: {mediaTempoConectado.toFixed(2)} horas</p>\r\n        </div>\r\n        {Object.keys(clientesPorPlano).length > 0 && (\r\n          <div>\r\n            <h2>Clientes por Plano:</h2>\r\n            {Object.keys(clientesPorPlano).map((plano) => (\r\n              <p key={plano}>\r\n                {plano}: {clientesPorPlano[plano]}\r\n              </p>\r\n            ))}\r\n          </div>\r\n        )}\r\n        {Object.keys(clientesPorCidade).length > 0 && (\r\n          <div>\r\n            <h2>Clientes por Cidade:</h2>\r\n            {Object.keys(clientesPorCidade).map((cidade) => (\r\n              <p key={cidade}>\r\n                {cidade}: {clientesPorCidade[cidade].online} online, {clientesPorCidade[cidade].offline} offline\r\n              </p>\r\n            ))}\r\n          </div>\r\n        )}\r\n        {Object.keys(clientesPorConcentrador).length > 0 && (\r\n          <div>\r\n            <h2>Clientes por Concentrador:</h2>\r\n            {Object.keys(clientesPorConcentrador).map((concentrador) => (\r\n              <p key={concentrador}>\r\n                {concentrador}: {clientesPorConcentrador[concentrador].online} online, {clientesPorConcentrador[concentrador].offline} offline\r\n              </p>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InformacoesGerais;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}